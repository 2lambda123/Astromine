plugins {
	id 'com.matthewprenger.cursegradle' version '1.4.0'
	id 'org.cadixdev.licenser' version '0.6.1'
	id 'fabric-loom'
	id 'java'
	id 'maven-publish'
}

def minecraftVersion = project.properties['minecraftVersion']
group = 'com.github.mixinors'
version = '2.0.8' + project.properties['minecraftVersion']

license {
	header 'LICENSE'
	ignoreFailures = true
}

loom {
	accessWidenerPath = file('src/main/resources/astromine.accesswidener')
	
	runs {
		create('Data') {
			client()
			vmArg('-Dfabric-api.datagen')
			vmArg('-Dfabric-api.datagen.output-dir=' + file('src/generated/resources'))
			
			ideConfigGenerated true
			runDir 'build/datagen'
			source sourceSets.main
		}
	}
}

repositories {
	maven { url 'https://maven.vini2003.dev/releases' }
	maven { url 'https://maven.terraformersmc.com/releases/' }
	maven { url 'https://maven.architectury.dev' }
	maven { url 'https://jitpack.io' }
	maven { url 'https://maven.ladysnake.org/releases' }
	
	maven {
		url 'https://maven.blamejared.com'
		content {
			includeGroup 'vazkii.patchouli'
		}
	}
}

dependencies {
	ext.modApiInclude = { str ->
		modApi str
				include str
	}

	// Minecraft
	minecraft "com.mojang:minecraft:${minecraftVersion}"

	// Yarn
	mappings "net.fabricmc:yarn:${yarnVersion}:v2"
	
	// Fabric Loader
	modImplementation "net.fabricmc:fabric-loader:$fabricLoaderVersion"

	// Fabric API
	modImplementation "net.fabricmc.fabric-api:fabric-api:$fabricApiVersion"
	
	// Cardinal Components Base
	modApiInclude("dev.onyxstudios.cardinal-components-api:cardinal-components-base:$cardinalComponentsVersion")

	// Cardinal Components Block
	modApiInclude("dev.onyxstudios.cardinal-components-api:cardinal-components-block:$cardinalComponentsVersion")

	// Cardinal Components Chunk
	modApiInclude("dev.onyxstudios.cardinal-components-api:cardinal-components-chunk:$cardinalComponentsVersion")

	// Cardinal Components Entity
	modApiInclude("dev.onyxstudios.cardinal-components-api:cardinal-components-entity:$cardinalComponentsVersion")

	// Cardinal Components Item
	modApiInclude("dev.onyxstudios.cardinal-components-api:cardinal-components-item:$cardinalComponentsVersion")

	// Cardinal Components World
	modApiInclude("dev.onyxstudios.cardinal-components-api:cardinal-components-world:$cardinalComponentsVersion")

	// Cardinal Components Level
	modApiInclude("dev.onyxstudios.cardinal-components-api:cardinal-components-level:$cardinalComponentsVersion")

	// Shapes
	modApiInclude("com.terraformersmc.terraform-api:terraform-shapes-api-v1:$shapesVersion")

	// Patchouli
	modApiInclude("vazkii.patchouli:Patchouli:$patchouliVersion")

	// ModMenu
	modApi("com.terraformersmc:modmenu:$modMenuVersion")

	// Energy
	modApiInclude("teamreborn:energy:$energyVersion")

	// Cloth Config
	modApiInclude("me.shedaniel.cloth:cloth-config-fabric:$clothConfigVersion")

	// Roughly Enough Items
	modApi("me.shedaniel:RoughlyEnoughItems-fabric:$roughlyEnoughItemsVersion")

	// Architectury
	modImplementation("dev.architectury:architectury-fabric:$architecturyVersion")

	// Hammer Core
	modApiInclude("dev.vini2003:hammer-core:$hammerVersion")

	// Hammer GUI
	modApiInclude("dev.vini2003:hammer-gui:$hammerVersion")

	// Hammer GUI Energy
	// modApiInclude("dev.vini2003:hammer-gui-energy:$hammerVersion")

	// Hammer Gravity
	modApiInclude("dev.vini2003:hammer-gravity:$hammerVersion")

	// PigLib
	modApiInclude("com.shnupbups:Piglib:$pigLibVersion")

	// CauldronLib
	modApiInclude("com.shnupbups:CauldronLib:$cauldronLibVersion")
	
	// Satin
	modApiInclude("org.ladysnake:satin:$satinVersion")
}

tasks.processResources {
	inputs.property('version', project.version)

	filesMatching('fabric.mod.json') {
		expand('version': project.version)
	}
}

tasks.withType(JavaCompile) {
	options.release = 17
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

sourceSets {
	main {
		resources {
			srcDir('src/generated/resources')
		}
	}
}
