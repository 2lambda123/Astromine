project.ext.setDefaultApis = {
    // Cardinal-Components API
    useAsApi("dev.onyxstudios.cardinal-components-api:cardinal-components-base:${cardinalComponentsVersion}")
    useAsApi("dev.onyxstudios.cardinal-components-api:cardinal-components-block:${cardinalComponentsVersion}")
    useAsApi("dev.onyxstudios.cardinal-components-api:cardinal-components-chunk:${cardinalComponentsVersion}")
    useAsApi("dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${cardinalComponentsVersion}")
    useAsApi("dev.onyxstudios.cardinal-components-api:cardinal-components-item:${cardinalComponentsVersion}")
    useAsApi("dev.onyxstudios.cardinal-components-api:cardinal-components-world:${cardinalComponentsVersion}")

    // Shapes
    useAsApi("com.terraformersmc.terraform-api:terraform-shapes-api-v1:${shapesVersion}")

    // Fabric Language Kotlin
    useAsCompileOnly("net.fabricmc:fabric-language-kotlin:${fabricLanguageKotlinVersion}")
    useAsRuntimeOnly("net.fabricmc:fabric-language-kotlin:${fabricLanguageKotlinVersion}")
    include("net.fabricmc:fabric-language-kotlin:${fabricLanguageKotlinVersion}")

    // Patchouli
    useAsApi("vazkii.patchouli:Patchouli:${patchouliVersion}")

    // ModMenu
    useAsApiOptionally("com.terraformersmc:modmenu:${modMenuVersion}")

    // Tech Reborn Energy
    useAsApi("teamreborn:energy:${energyVersion}")

    // Cloth Config
    useAsCompileOnly("me.shedaniel.cloth:cloth-config:${clothConfigApiVersion}")
    useAsRuntimeOnly("me.shedaniel.cloth:cloth-config-fabric:${clothConfigApiVersion}")

    // Kotlin
    useAsApi("org.jetbrains.kotlin:kotlin-stdlib:${project.kotlinVersion}")
    useAsApi("org.jetbrains.kotlin:kotlin-stdlib-jdk7:${project.kotlinVersion}")
    useAsApi("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${project.kotlinVersion}")

    // Piglib
    useAsApi("com.shnupbups:Piglib:${pigLibVersion}")

    // CauldronLib
    useAsApi("com.shnupbups:CauldronLib:${cauldronLibVersion}")

    // Architectury API
    useAsApi("dev.architectury:architectury-fabric:${architecturyApiVersion}")

    // RoughlyEnoughItems
    useAsApiOptionally "me.shedaniel:RoughlyEnoughItems-fabric:${roughlyEnoughItemsVersion}"

    // Hammer
    useAsCompileOnly("dev.vini2003:hammer:${hammerVersion}")
    useAsRuntimeOnly("dev.vini2003:hammer:${hammerVersion}")

    include("dev.vini2003:hammer:${hammerVersion}")

    // Hammer Energy
    useAsCompileOnly("dev.vini2003:hammer-energy:${hammerVersion}")
    useAsRuntimeOnly("dev.vini2003:hammer-energy:${hammerVersion}")

    include("dev.vini2003:hammer-energy:${hammerVersion}")
}

project.ext.setRuntimeTestMods = {

}