project.ext.setDefaultApis = {
    // Cardinal-Components API
    useAsApi("dev.onyxstudios.cardinal-components-api:cardinal-components-base:${cardinalComponentsVersion}")
    useAsApi("dev.onyxstudios.cardinal-components-api:cardinal-components-block:${cardinalComponentsVersion}")
    useAsApi("dev.onyxstudios.cardinal-components-api:cardinal-components-chunk:${cardinalComponentsVersion}")
    useAsApi("dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${cardinalComponentsVersion}")
    useAsApi("dev.onyxstudios.cardinal-components-api:cardinal-components-item:${cardinalComponentsVersion}")
	useAsApi("dev.onyxstudios.cardinal-components-api:cardinal-components-world:${cardinalComponentsVersion}")
	useAsApi("dev.onyxstudios.cardinal-components-api:cardinal-components-level:${cardinalComponentsVersion}")
	include("dev.onyxstudios.cardinal-components-api:cardinal-components-base:${cardinalComponentsVersion}")
	include("dev.onyxstudios.cardinal-components-api:cardinal-components-block:${cardinalComponentsVersion}")
	include("dev.onyxstudios.cardinal-components-api:cardinal-components-chunk:${cardinalComponentsVersion}")
	include("dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${cardinalComponentsVersion}")
	include("dev.onyxstudios.cardinal-components-api:cardinal-components-item:${cardinalComponentsVersion}")
	include("dev.onyxstudios.cardinal-components-api:cardinal-components-world:${cardinalComponentsVersion}")
	include("dev.onyxstudios.cardinal-components-api:cardinal-components-level:${cardinalComponentsVersion}")

    // Shapes
	useAsApi("com.terraformersmc.terraform-api:terraform-shapes-api-v1:${shapesVersion}")
	include("com.terraformersmc.terraform-api:terraform-shapes-api-v1:${shapesVersion}")

    // Patchouli
    useAsApi("vazkii.patchouli:Patchouli:${patchouliVersion}")

    // ModMenu
    useAsApiOptionally("com.terraformersmc:modmenu:${modMenuVersion}")

    // Tech Reborn Energy
	useAsApi("teamreborn:energy:${energyVersion}")
	include("teamreborn:energy:${energyVersion}")

    // Cloth Config
    useAsCompileOnly("me.shedaniel.cloth:cloth-config:${clothConfigApiVersion}")
    useAsRuntimeOnly("me.shedaniel.cloth:cloth-config-fabric:${clothConfigApiVersion}")

    // PigLib
	useAsApi("com.shnupbups:Piglib:${pigLibVersion}")
	include("com.shnupbups:Piglib:${pigLibVersion}")

    // CauldronLib
	useAsApi("com.shnupbups:CauldronLib:${cauldronLibVersion}")
	include("com.shnupbups:CauldronLib:${cauldronLibVersion}")

    // Architectury API
	useAsApi("dev.architectury:architectury-fabric:${architecturyApiVersion}")

    // RoughlyEnoughItems
    useAsApiOptionally "me.shedaniel:RoughlyEnoughItems-fabric:${roughlyEnoughItemsVersion}"

    // Hammer Core
    useAsApi("dev.vini2003:hammer-core:${hammerVersion}")
    include("dev.vini2003:hammer-core:${hammerVersion}")

    // Hammer GUI
    useAsApi("dev.vini2003:hammer-gui:${hammerVersion}")
    include("dev.vini2003:hammer-gui:${hammerVersion}")

    // Hammer GUI Energy
    useAsApi("dev.vini2003:hammer-gui-energy:${hammerVersion}")
    include("dev.vini2003:hammer-gui-energy:${hammerVersion}")

    // Hammer Gravity
    useAsApi("dev.vini2003:hammer-gravity:${hammerVersion}")
    include("dev.vini2003:hammer-gravity:${hammerVersion}")

	// Hammer Chat
	useAsApi("dev.vini2003:hammer-chat:${hammerVersion}")
	include("dev.vini2003:hammer-chat:${hammerVersion}")

	// Hammer Emoji
	useAsApi("dev.vini2003:hammer-emoji:${hammerVersion}")
	include("dev.vini2003:hammer-emoji:${hammerVersion}")

	// Hammer Blueprint
	useAsApi("dev.vini2003:hammer-blueprint:${blueprintVersion}")
	include("dev.vini2003:hammer-blueprint:${blueprintVersion}")

	// Hammer Blueprint NBT
	useAsApi("dev.vini2003:hammer-blueprint-nbt:${hammerVersion}")
	include("dev.vini2003:hammer-blueprint-nbt:${hammerVersion}")
}

project.ext.setRuntimeTestMods = {

}