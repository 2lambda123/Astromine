plugins {
    id "com.github.johnrengelman.shadow" version "5.0.0"
}

configurations {
    shadowCommon
}

architectury {
    platformSetupLoomIde()
    forge()
}

loom {
    useFabricMixin = true
}

dependencies {
    // Forge
    forge "net.minecraftforge:forge:${rootProject.minecraft_version}-${rootProject.forge_version}"

    // Architectury
    modApi "me.shedaniel:architectury-forge:${rootProject.architectury_version}"
    
    // Cloth Config
    modImplementation "me.shedaniel.cloth:cloth-config-forge:${project.cloth_config_version}"

    implementation(project(path: ":common")) {
        transitive = false
    }

    developmentForge(project(path: ":common")) {
        transitive = false
    }

    shadowCommon(project(path: ":common", configuration: "transformProductionForge")) {
        transitive = false
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

shadowJar {
    exclude "fabric.mod.json"

    configurations = [project.configurations.shadowCommon]
    classifier "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    classifier "forge"
}

jar {
    classifier "dev"
}

publishing {
    publications {
        mavenForge(MavenPublication) {
            artifactId = rootProject.mod_name + "-" + project.name

            artifact(remapJar) {
                classifier null
            }
        }
    }

    repositories {

    }
}

repositories {
    mavenCentral()
}